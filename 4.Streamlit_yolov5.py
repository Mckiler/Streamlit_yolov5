#pip install streamlit

import shutil
import os
import streamlit as st
import pandas as pd
import numpy as np
import torch
from PIL import Image
from io import BytesIO

from torchvision import transforms

device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

## ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏õ‡πá‡∏ô confident value ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 0-1 ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤ threshold prediction
def get_yolov5(confident_val):    
   ## path ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô path ‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏î‡πâ‡∏ß‡∏¢  
   model = torch.hub.load('yolov5', 'custom', path='best.pt', source='local')
   model.conf = confident_val    
   return model

 
st.sidebar.image("logo.png", caption=None, width=300, use_column_width=None, clamp=False, channels='RGB', output_format='auto')
st.sidebar.header('üëâ Mckiler üëà')
st.sidebar.header('Choose Prediction Model')
model_choice = st.sidebar.selectbox('Logo Detection Model', ['YoloV5s Prediction','Other predictions'], key='1')

if model_choice == 'YoloV5s Prediction':
    st.subheader("Image")
    image_file = st.file_uploader("Upload Images", type=["png","jpg","jpeg"])
    
    if image_file is not None:
    
        # To See details
        file_details = {"filename":image_file.name, "filetype":image_file.type,
                        "filesize":image_file.size}
        # st.write(file_details)
 
        st.image(image_file, caption='Image', channels='RGB',output_format='auto')
     
        ## ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÉ‡∏ô‡∏†‡∏≤‡∏û
        model_logo = get_yolov5(0.4)
        
        ## Read Image
        # img = Image.open('test\9bf6d28723ca69e7.jpg')
        img = Image.open(image_file)

        ## Inference ‡πÇ‡∏î‡∏¢ input ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤ ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏≤‡∏î 640
        results = model_logo(img, size= 640)
        results.render()
        for img in results.imgs:
            buffered = BytesIO()
            img_base64 = Image.fromarray(img)
  
        st.image(img_base64, caption='Image', channels='RGB',output_format='auto')
        # results.show()